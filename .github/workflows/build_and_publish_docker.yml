name: "dev.zero-totp.com deployment"

on:
  workflow_call:
    secrets:
      GITGUARDIAN_API_KEY:
        required: true
      SONAR_TOKEN:
        required: true
      SONAR_HOST_URL:
        required: true
      

jobs:
    tests_and_security:
      name: Tests and security analysis
      uses: ./.github/workflows/security_analysis.yml  # use the callable tests job to run tests
      secrets:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }} 
    docker-frontend:
      needs: [tests_and_security]
      name: Publish Frontend Docker image
      runs-on: ubuntu-latest
      env:
        REPO: zero-totp-frontend
      steps:
        - uses: actions/checkout@v3
        - name: Login to Github
          run : echo ${{ secrets.TOKEN_GITHUB }} | docker login ghcr.io -u ${{ secrets.USERNAME_GITHUB }} --password-stdin
        - name: Create environment file
          working-directory: ./frontend
          run: bash generate-env.sh '${{ github.ref_name }}' '${{secrets.DEV_RSA_PUBLIC_KEY}}'
        - name: Generate sitemap.xml
          working-directory: ./frontend
          run: bash generate_sitemap.sh 
        - name: Build Docker image
          working-directory: ./frontend
          run: current_version=$(echo ${{ github.ref_name }} | sed 's/^v//') && docker build -t ghcr.io/${{ secrets.USERNAME_GITHUB }}/$REPO:$current_version -t ghcr.io/${{ secrets.USERNAME_GITHUB }}/$REPO:dev  . 
        - name: Publish Docker Image
          run: docker push ghcr.io/${{ secrets.USERNAME_GITHUB }}/$REPO --all-tags
    docker-api:
      needs: [tests]
      name: Publish API-dev Docker image 
      runs-on: ubuntu-latest
      env:
        REPO: zero-totp-api
      steps:
        - uses: actions/checkout@v3
        - name: Login to Github
          run : echo ${{ secrets.TOKEN_GITHUB }} | docker login ghcr.io -u ${{ secrets.USERNAME_GITHUB }} --password-stdin
        - name: Populating API version
          working-directory: ./api
          run: echo ${{ github.ref_name }} > ./VERSION
        - name: Populating API version
          working-directory: ./api
          run: echo ${{ github.ref_name }} > ./VERSION && echo ${{ github.sha}} | cut -c1-7 >> ./VERSION
        - name: Build Docker image
          working-directory: ./api
          run: current_version=$(echo ${{ github.ref_name }} | sed 's/^v//') && docker build -t ghcr.io/${{ secrets.USERNAME_GITHUB }}/$REPO:$current_version -t ghcr.io/${{ secrets.USERNAME_GITHUB }}/$REPO:dev  . 
        - name: Publish Docker Image
          run: docker push ghcr.io/${{ secrets.USERNAME_GITHUB }}/$REPO --all-tags
        
